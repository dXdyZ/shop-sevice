services:
  db-user:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: user_service
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
    volumes:
      - postgres_user_data:/var/lib/postgresql/data
    ports:
      - "15432:5432"

  db-keycloak:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_keycloak_data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:26.3
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db-keycloak:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_PROXY: edge
      KC_HOSTNAME: localhost
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - ./configs/keycloak/realm-export.json:/opt/keycloak/data/import/realm-test.json
    depends_on:
      - db-keycloak
    command: [ "start-dev", "--import-realm" ]

#  nginx:
#    image: nginx:latest
#    ports:
#      - "8080:80"
#    volumes:
#      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#      - ./logs/nginx:/var/log/nginx

  victoria-metrics:
    image: victoriametrics/victoria-metrics:v1.93.12
    container_name: victoria-metrics
    ports:
      - "8428:8428"
    command:
      - '--promscrape.config=/etc/vm/promscrape.yaml'
      - '--storageDataPath=/storage'
    volumes:
      - ./configs/victoria-metrics/promscrape.yaml:/etc/vm/promscrape.yaml:ro
      - ./configs/victoria-metrics/data:/storage

  grafana:
    image: grafana/grafana:10.2.4
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./configs/grafana:/var/lib/grafana

  trace:
    image: grafana/tempo:2.3.1
    container_name: shop-trace
    ports:
      - "3200:3200"
      - "9095:9095"
      - "4317:4317"
      - "4318:4318"
      - "9411:9411"
      - "14268:14268"
    volumes:
      - ./configs/tempo/tempo.yaml:/etc/tempo.yaml
    command:
      - '-config.file=/etc/tempo.yaml'

  grafana-loki:
    image: grafana/loki:2.9.4
    container_name: grafana-loki
    ports:
      - "3100:3100"

  redis:
    image: redis:7-alpine
    hostname: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      REDIS_PASSWORD: redis
      REDIS_ARGS: --appendonly yes

  consul:
    image: consul:1.15.4
    container_name: consul
    hostname: consul
    ports:
      - "8500:8500"
    volumes:
      - consul_data:/consul/data
      - .configs/consul/agent.json:/consul/config/agent.json
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0 -config-dir=/consul/config
    environment:
      - CONSUL_LOCAL_CONFIG={"datacenter":"dc1", "server":true, "enable_script_checks":true}

  elasticsearch:
    image: elasticsearch:9.1.4
    container_name: es-dev
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - bootstrap.memory_lock=true
    ports:
      - "9200:9200"
      - "9300:9300"
    deploy:
      resources:
        limits:
          memory: 3g
    volumes:
      - ./configs/elastic/synonyms_ru_en.txt:/usr/share/elasticsearch/config/analysis/synonyms_ru_en.txt
      - ./logs/elastic:/usr/share/elasticsearch/logs
      - es-data:/usr/share/elasticsearch/data
  init-elastic:
    image: curlimages/curl:8.16.0
    container_name: curl-elastic-init
    depends_on:
      - elasticsearch
    environment:
      ES_SCHEME: "http"
      ES_HOST: "elasticsearch"
      ES_PORT: "9200"
#     Если включена безопасность
#     ES_USERNAME: ""
#     ES_PASSWORD: ""
      INDEX_NAME: "product_v1"
      MAPPINGS_FILE: "/mappings/product_V1-mapping.json"
      WAIT_TIMEOUT_SEC: "120"
      VERBOSE: "false"
    volumes:
      - ./configs/elastic/init-index.sh:/setup/init-index.sh:ro
      - ./configs/elastic/mappings:/mappings:ro
    entrypoint: ["/bin/sh","-c","set -e; /bin/sh /setup/init-index.sh"]

  kibana:
    image: kibana:9.1.4
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://es-dev:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
volumes:
  postgres_user_data:
  postgres_keycloak_data:
  redis_data:
  consul_data:
  es-data: